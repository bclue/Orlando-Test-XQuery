 Part A--searching the writing and biography documents:)
declare namespace functx = "http://www.functx.com";

(: functx function to remove trailing and leading whitespace :)
declare function functx:trim
  ( $arg as xs:string? )  as xs:string {
   replace(replace($arg,'\s+$',''),'^\s+','')
 } ;
 
(: Function to filter out documents by when the author was alive :)
declare function local:filter_using_catalogue()
{
 for $writer  in doc("/db/TEST/catalogue/catalogue.xml")//person

 	let $birth := local:process_date($writer/@birth)
 	
 	let $id := xs:string($writer/@person_id)
 
  order by $birth
  	return $id
};

(: Function to reformat Orlando dates to YYYY-MM-DD
 Will set month to 01 and day to 01 if unavailable:)
declare function local:process_date($string_date as xs:string) {
 let $date := tokenize(functx:trim($string_date), "[-]")
 let $exclude := ("")
 let $date := distinct-values($date[not(.=$exclude)])

 return 
 if (count($date) = 3) then (
	string-join($date, '-')  
 ) else ( if (count($date) = 2) then (
 	concat(string-join($date, '-'), "-01")
 	) else (if (count($date) = 1) then ( 
 		concat($date, "-01-01")
 		) else (
 		)
 		)
 		)
};

let $key_term := "modernist*"
(: Get query results :)
for $id in local:filter_using_catalogue()
        
        return
        	let $bio_uri := concat("/db/TEST/biography/", $id, "-b.xml")
		let $writing_uri := concat("/db/TEST/writing/", $id, "-w.xml")	
          for $hit in doc($bio_uri)//DIV2[ft:query(., $key_term)] | doc($writing_uri)//DIV2[ft:query(., $key_term)]
			| doc($bio_uri)//AUTHORSUMMARY[ft:query(., $key_term)] | doc($writing_uri)//AUTHORSUMMARY[ft:query(., $key_term)]
			return $hit
