(:- Query 1.02 eXist-db 
 Part B--searching the events :)

declare namespace functx = "http://www.functx.com";

(: functx function to remove trailing and leading whitespace :)
declare function functx:trim
  ( $arg as xs:string? )  as xs:string {
   replace(replace($arg,'\s+$',''),'^\s+','')
 } ;

(: Filter events by EID date range :)
declare function local:filter_events($eid as xs:string?, $start_date as xs:string, $end_date as xs:string )
{
 
 for $date  in doc(concat("/db/TEST/events/", $eid, ".xml"))//FREESTANDING_EVENT//(* except RESPONSIBILITY)//DATE/@VALUE
 	let $date := local:process_date($date)
  	where xs:date($date) ge xs:date($start_date) and xs:date($date) le xs:date($end_date)
  	order by $date
  	return true() 
};

(: Function to reformat Orlando dates to YYYY-MM-DD
 Will set month to 01 and day to 01 if unavailable:)
declare function local:process_date($string_date as xs:string) {
 let $date := tokenize(functx:trim($string_date), "[-]")
 let $exclude := ("")
 let $date := distinct-values($date[not(.=$exclude)])

 return 
 if (count($date) = 3) then (
	string-join($date, '-')  
 ) else ( if (count($date) = 2) then (
 	concat(string-join($date, '-'), "-01")
 	) else (if (count($date) = 1) then ( 
 		concat($date, "-01-01")
 		) else (
 		)
 		)
 		)
};

(: Set query variables :)
let $key_term := "cholera"
let $start_date := "1832-06-07"
let $end_date := "1867-08-14"

(: Get hosted events from other documents :)
let $hosted_events := for $hit in //CHRONSTRUCT[ft:query(.,  $key_term)] 
 	let $date := xs:string($hit//DATE/@VALUE)
 	let $date_struct := xs:string($hit//DATESTRUCT/@VALUE) 
 	let $date_range_start := xs:string($hit//DATERANGE/@FROM) 
 	let $date_range_end := xs:string($hit//DATERANGE/@TO) 

	let $exclude := ("")
  	let $lower_bound := ($date, $date_struct, $date_range_start) 
 	let $lower_bound := local:process_date(distinct-values($lower_bound[not(.=$exclude)]))
    
     let $upper_bound := ($date, $date_struct, $date_range_start) 
 	let $upper_bound := local:process_date(distinct-values($upper_bound[not(.=$exclude)]))

     
  	where (xs:date($lower_bound ) ge xs:date($start_date)  and xs:date($lower_bound ) le xs:date($end_date))
  	or (xs:date($upper_bound) ge xs:date($start_date)  and xs:date($upper_bound) le xs:date($end_date))
	or (xs:date($lower_bound ) le xs:date($start_date)  and xs:date($upper_bound) ge xs:date($end_date)) 
     return  $hit

(: Get freestanding events from event documents :)
 let $freestanding_events := for $hit in //FREESTANDING_EVENT//CHRONSTRUCT[ft:query(.,  $key_term)] 
	let $eid := xs:string($hit/(ancestor::FREESTANDING_EVENT)/@EID)
	where local:filter_events($eid, $start_date, $end_date) = true() 
     return $hit

return ($hosted_events, $freestanding_events)